/*
 * @Descripttion: 
 * @version: 1.0
 * @Author: Hersynne
 * @Date: 2025-07-17 16:48:35
 * @LastEditors: Hersynne
 * @LastEditTime: 2025-07-17 20:01:50
 */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/myhouse.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useHelper, useTexture } from '@react-three/drei'
import * as THREE from 'three'
import { useControls } from 'leva';
import { RectAreaLightHelper } from 'three/examples/jsm/helpers/RectAreaLightHelper'
export function HeroModel(props) {
  const { nodes, materials } = useGLTF('/models/myhouse.glb')
  const texture = useTexture('/textures/house.png', (texture) => {
    texture.flipY = false
  })
  console.log(nodes)

  // 创建一个灯光引用  const rectLight = useRef();
  const rectLight = useRef();
  useHelper(rectLight, RectAreaLightHelper, "hotpink");

  const { lightIns, lightColor, lightAngle, lightDistance } = useControls('light', {
    lightDistance: { value: 10, min: 0, max: 100, step: 1 },
    lightAngle: { value: -Math.PI / 10, min: -Math.PI, max: Math.PI, step: Math.PI / 365 },
    lightIns: { value: 10, min: 0, max: 1000, step: 1 },
    lightColor: '#00ff00'
  })
  useEffect(() => {
    if (!nodes.tableLight || !rectLight.current) return

    // 更新世界矩阵（确保 transform 正确）
    nodes.tableLight.updateWorldMatrix(true, false)

    const light = rectLight.current
    // 获取世界位置和旋转
    nodes.tableLight.getWorldPosition(light.position)
    nodes.tableLight.getWorldQuaternion(light.quaternion)
    light.rotation.x = -Math.PI / 2
    light.rotation.y = lightAngle
    // 你也可以选择设置方向朝某一点（例如 lookAt）
    // light.lookAt(0, 0, 0)

    light.width = 0.12
    light.height = 2.8

    // 设置其他参数
    light.intensity = lightIns
    light.color = new THREE.Color(lightColor)

  }, [nodes, lightIns, lightColor, lightAngle, lightDistance])
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.house.geometry} material={nodes.house.material}>
        <meshStandardMaterial map={texture} />
      </mesh>
      {/* <mesh geometry={nodes.tableLight.geometry} material={nodes.tableLight.material}>
        <meshBasicMaterial color="red" />
      </mesh> */}

      <rectAreaLight
        ref={rectLight}
        color={lightColor}
        intensity={lightIns}
        penumbra={1}
        castShadow
      />
    </group>
  )
}

useGLTF.preload('/models/myhouse.glb')
